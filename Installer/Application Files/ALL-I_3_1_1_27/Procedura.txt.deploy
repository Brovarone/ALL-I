Elenco dei processi da seguire e implementare:
	- [IMP] Leggere file da una cartella
			OK Ciclarli
			definire nomi con ALLSYSTEM, 
			OK aprirli 
			DA FARE Connettermi al db di mago
			PIU' O MENO lanciare procedura adeguata se CSV o XLS
				La procedura per XLS genera un Dataset ( del file Excel) che passo alle varie altre procedure, una per ogni tabella Mago
				Servono :
					NO 1+ SQLDataAdapter per poi fare aggiornamento sul Database
					NO Per ogni adapter generare il sqlcommandbuilder per Insert e/o Update
					Creare e  Assegnare un datatable al file xls ( e alle tabelle Mago) e un datarow con tutte le righe
					Ciclare l'XLS e fare query per decidere Update/insert,
				La procedura per CSV necessita di una classe creata ad Hoc che contiene il csv stesso
					

Possibile problema con tracciato csv che non corrisponde all'xml, io uso le colonne ( A,B,C) vedere se e' davvero cosi'				
				
- [IMP] Importare
			Per ogni file aperto popolare Dataset, poi ciclarlo e scrivere su dataset di Mago
	- Tabelle interessate:
		( singola importazione) gestire poi xml di mago
			- PdC 
				A MANO Natura mastri
				A MANO modificare il tipo conto (sui clienti e fornitori) chiedere a loro se mastrino e sottoconto sono movimentabili
				A MANO INSERIRE STRUTTURA PdC NEI SERVIZI
			- causali e tabelle varie
		( insert/update)
			- CliFor
			- Partite - forse piu' volte con dati sempre aggiornati o cmq con date di modifica
		(insert)
			- Primanota forse solo una volta
				-Dopo fare ricostruzione saldi contabili
			- Ordini Clienti
			- Documenti Vendita
				- Importo solo il file con le fatture elettroniche ( non creo tabelle totali e scadenze)
				- OBBLIGATORIO fare ricalcolo da Mago / Stampa & Registra		
		(update)
			- ID vari

Modifiche Database MAGO
	campi/tabella conversione su :
	- ? Clienti / Fornitori ( MA_CustSupp)
	- Condizioni Pagamento (MA_PaymentTerms)
	- Codici IVA (MA_TaxCodes)
	- Piano dei Conti (MA_ChartOfAccounts)
	- ? Modelli Contabili (MA_AccTemplates)

PRIMA DELL'IMPORT
Inserire A MANO SU MAGO un ID ( anche a 0) su:
	Prima nota
	Movimenti analitici
	Documenti vendita
	Ordini Clienti
	FATTO CREARE UTENTE xx  sulla console per segnarmi che gli import li fa lui


FILE OBBLIGATORI:
QTMP_CPAG.CSV = CORRISPONDENZA CODICE CONDPAG DI ACG TRA PARTITE ACG E CONTABILITA' ACG IN QUANTO ASSENTE IN PARTITARIO
GCPA200F.XLS ( XLSX) = PARTITE CLIENTI
GFPA200F.XLS ( XLSX) = PARTITE FORNITORI
FTPA300F.CSV =  FATTURE ELETTRONICHE

Creare Database con NoChartOfAccount
Copiare da ALLSYSTEM-1
MA_company
MA_TaxCodes
MA_TaxCodesDefaults
MA_CustSuppParameters
MA_PaymentTerms
MA_PaymentTermsPercInstall
MA_AccBookParameters ( VUOTA)
MA_TaxAccountsDefaults ( VUOTA)
MA_PaymentParameters ( VUOTA)
MA_AccountingDefaults
MA_AccountingAdjDefaults
MA_AccountingParameters +Print + Tax
Ma_AccountingReason + Notes
MA_PyblsRcvblsParaterers + rate + Pymt + Aging
 (tutto ilpiano dei conti + ledgers)
 (tutto gestione documenti)
 MA_SaleParamters + paragon + witholdTax
 Ma_SalesDefaults
 Ma_SaleOrdParameters + Default

MA_AccTemplates ???
	- Piano dei conti

SEQUENZA IMPORT
OK PIANO DEI CONTI
OK CONDIZIONI DI PAGAMENTO
OK BANCHE CLIENTI

CLIENTI / FORNITORI
PERSONE FISICHE
DATI PA: FTEU400F
RID: ACGSEP00F

FTPA300+WESEIVA
DICHIARAZIONI INTENTO: WESEIVA ( arrivano di volta in volta con le fatture, finire di vedere update/insert)

PARTITE CLIENTI:
GCPA200F + TRANSCODE QTMP_CPAG.CSV



Controlli da fare:
Se le fatture con SPLIT escono bene

Aggiungere creazione di LOG per tutte le cassistische strane di errore che possono venir fuori:
-RID, Fatture PA, Dich Intento etc.



------------
json
If you must convert the JSON to a C# type first then create a C# type that matches the JSON. 
Visual Studio has a code generator for this purpose. First, copy the JSON. 
In Visual Studio select Edit -> Paste Special -> Paste JSON as Classes. 
From here you can use standard C# deserialization. Use NewtonSoft in .NET 4+ projects or the System.Text.Json namespace for .NET Core. Similar to the SQL example above table, once you have the deserialized data you can convert the C# type to whatever you like.
------------